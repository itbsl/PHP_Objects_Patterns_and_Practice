<?php

//**************************************************************
/*
 * 本章涵盖的主题
 * 1.类和对象: 声明类和初始化对象
 * 2.构造方法: 自动构造的对象
 * 3.基本类型和类类型: 为什么类型很重要?
 * 4.继承: 为什么需要继承,如何使用继承?
 * 5.可见性: 梳理对象接口,保护方法和属性免受干扰
 */
//**************************************************************

//3.2设置类中的属性

//我们可以在类中定义称为"属性"的特殊变量.属性也被称为"成员变量",用户保存在各个对象中不同的数据.
//声明属性时必须要用public、protected、private关键字指定属性的可见性,这些关键字确定了属性能够被访问的作用域.
/*
class 类名
{
    public 属性1; //公有属性,在任何地方都可以访问
    protected 属性2; //受保护属性,只可以在当前类和子类中访问
    private 属性3;  //私有属性,只能在当前类中访问
}
*/

//示例:

class ShopProduct
{
    public $title = "default product";
    public $producerMainName = "main name";
    public $producerFirstName = "first name";
}

$product = new ShopProduct();
echo $product->title;

//事实上,PHP并不强制要求在类中声明所有属性.可以动态地向一个对象添加属性.
$product->price = 11.11; //给product对象动态添加了一个price属性
//不过,在面向对象编程中向对象赋予属性并非一种好的实践.
//为什么动态地设置属性是一种糟糕的实践呢?创建类就是定义了一种类型,是告诉其他开发人员这个类(以及任何实例化自它的对象)
//包含一组字段和函数.如果ShopProduct类定义了一个$title属性,那么任何与ShopProduct对象一起工作的代码都是以$title
//属性的可用性为工作前提的,但动态设置属性就失去了这种保证